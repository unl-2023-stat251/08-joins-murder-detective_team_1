# you can do the assignment using the database, if you want,
# or you can use the code below to read in each table separately.
library(RSQLite)
install.packages("RSQLite")
install.packages("DBI")
# This loads all of the tables into R data frame objects.
# You can also just use the database connection above.
# You don't need to understand what this code does to run it :)
if (!"purrr" %in% installed.packages()) {
install.packages("purrr")
}
# Load all tables from CSV
table_names <- c("crime_scene_report",
"drivers_license",
"facebook_event_checkin",
"get_fit_now_check_in",
"get_fit_now_member",
"income",
"interview",
"person")
url_base <- "https://raw.githubusercontent.com/srvanderplas/unl-stat850/main/data/sql-murder/"
# For each table name, read the tables in and store them as the name of the table
purrr::walk(table_names, function(x) {
assign(x, readr::read_csv(paste0(url_base, x, ".csv")), envir = .GlobalEnv)
})
library(dplyr)
library(tidyr)
crime_of_interest <- crime_scene_report %>%
filter(date == "20180115", city == "SQL City", type == "murder")
crime_of_interest$description
crime_of_interest
get_fit_now_member
person
person %>%
filter(address_street_name == "Northwestern Dr" | address_street_name == "Franklin Ave")
person %>%
filter(address_street_name == "Northwestern Dr")
person %>%
filter(address_street_name == "Northwestern Dr") %>%
arrange(address_number)
person %>%
filter(address_street_name == "Franklin Ave")
person %>%
filter(address_street_name == "Northwestern Dr") %>%
arrange(address_number)
person %>%
filter(address_street_name == "Northwestern Dr") %>%
arrange(desc(address_number))
left_join(interview, person, by = "person_id")
left_join(interview, person, by = "id")
left_join(interview, person, by = c("person_id", "id"))
person
interview
left_join(interview, person, by = c("person_id", "id"))
left_join(interview, person, by = c("id", "person_id"))
left_join(person, interview, by = c("id", "personal_id"))
left_join(person, interview, c("id", "personal_id"))
interview
left_join(interview, person, c("person_id", "id"))
left_join(interview, person, by = c("person_id", "id"))
interview
person
left_join(person, interview, by = c("id", "person_id"))
person
interview
left_join(person, interview, by = c("id", "person_id"))
left_join(person, interview, by = c("person_id", "id"))
left_join(person, interview, by = c("id"))
left_join(person, interview, by = "person_id")
person
interview
left_join(person, interview, by = join_by("person_id", "id"))
left_join(person, interview, by = join_by(person_id == id))
join_by?
?
s
?join_by
??join_by
left_join(person, interview, by = c("id", "person_id"))
left_join(person, interview, by = c("id" ="person_id"))
address <- c("Franklin Ave", "Northwestern Dr")
person %>%
filter(address_street_name %in% address) %>%
arrange(desc(address_number))
filter(contains(name, "Annabel")
person %>%
person
person %>%
filter(address_street_name %in% address) %>%
filter(contains(name, "Annabel"))
person %>%
filter(address_street_name %in% address)
witnesses <- left_join(person, interview, by = c("id" = "person_id")) %>%
filter(name %in% witness)
witness <- c("Morty Schapiro", "Annabel Miller")
witnesses <- left_join(person, interview, by = c("id" = "person_id")) %>%
filter(name %in% witness)
witnesses
witnesses$transcript
witnesses
witnesses$transcript
person %>%
filter(address_street_name %in% address)
person %>%
filter(address_street_name %in% address) %>%
filter(str_detect(name, "Annabel"))
person %>%
filter(address_street_name %in% address) %>%
filter(name == str_detect(name, "Annabel"))
library(tidyverse)
person %>%
filter(address_street_name %in% address) %>%
filter(str_detect(name, "Annabel"))
witnesses$transcript
person %>%
select(id, name, licence)
person %>%
select(id, name, license_id)
person_1 <- person %>%
select(id, name, license_id)
left_join(person1, drivers_license, by = c("license_id" = "id"))
person_1 <- person %>%
select(id, name, license_id)
left_join(person1, drivers_license, by = c("license_id" = "id"))
left_join(person_1, drivers_license, by = c("license_id" = "id"))
left_join(get_fit_now_member, person_1, by = c("person_id" = "id"))
inner_(get_fit_now_member, person_1, by = c("person_id" = "id"))
inner_join(get_fit_now_member, person_1, by = c("person_id" = "id"))
person_license <- left_join(person_1, drivers_license, by = c("license_id" = "id"))
inner_join(get_fit_now_member, person_license, by = c("person_id" = "id"))
left_join(get_fit_now_member, person_license, by = c("person_id" = "id"))
full_df <- left_join(get_fit_now_member, person_license, by = c("person_id" = "id")) %>% select(-name.x)
full_df
full_df %>%
filter(gender == "male")
full_df %>%
filter(gender == "male" & membership_status == "gold")
witnesses$transcript
person_1 <- person %>%
select(id, name, license_id)
person_license <- left_join(person_1, drivers_license, by = c("license_id" = "id"))
full_df <- left_join(get_fit_now_member, person_license, by = c("person_id" = "id")) %>% select(-name.x)
full_df %>%
filter(gender == "male" & membership_status == "gold")
full_df %>%
filter(gender == "male" & membership_status == "gold") %>%
filter(str_detect(plate_number, "H42W"))
person %>%
filter(address_street_name %in% address) %>%
arrange(address_number)
person %>%
filter(address_street_name %in% address) %>%
arrange(desc(address_number))
witnesses$transcript
full_df %>%
filter(gender == "male" & membership_status == "gold") %>%
filter(str_detect(plate_number, "H42W"))
get_fit_now_member
